This is the file for testing the module ``7-base_geometry``:
=========================================================

importing the module:
=====================

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

usages:
=======

Validate if area:
Validate if integer validator:
    >>> 'integer_validator' in dir(BaseGeometry)
    True

    >>> 'area' in dir(BaseGeometry)
    True


Call area exception:
    >>> f = BaseGeometry()
    >>> f.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

Integer validations:
    >>> f.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> f.integer_validator(1)
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'


    >>> f.integer_validator(1, 2, 3)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

Send negative:
    >>> f.integer_validator("name", -40)
    Traceback (most recent call last):
    ValueError: name must be greater than 0

Send zero:
    >>> f.integer_validator("name", 0)
    Traceback (most recent call last):
    ValueError: name must be greater than 0

Correct arguments:
    >>> f.integer_validator("name", 8)

    >>> bg = BaseGeometry()

    >>> bg.integer_validator("age",(4,))
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator("age",[97])
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator("age",True)
    Traceback (most recent call last):
    TypeError: age must be an integer


    >>> bg.integer_validator("age",{5})
    Traceback (most recent call last):
    TypeError: age must be an integer

    >>> bg.integer_validator("age",None)
    Traceback (most recent call last):
    TypeError: age must be an integer



    >>> bg.integer_validator("my_int", 43)

    >>> bg.integer_validator("width", 4)

    >>> try:
    ...     bg.integer_validator("Godwin", "Francis")
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [TypeError] name must be an integer

    >>> try:
    ...     bg.integer_validator("age", 0)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] age must be greater than 0


    >>> try:
    ...     bg.integer_validator("distance", -6)
    ... except Exception as e:
    ...     print("[{}] {}".format(e.__class__.__name__, e))
    [ValueError] distance must be greater than 0


    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> bg.integer_validator("age")
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> bg.integer_validator("Hello", 7, 8)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given